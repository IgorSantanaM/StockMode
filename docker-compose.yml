name: StockMode Application
services:
  stockmode.webapi:
    image: ${DOCKER_REGISTRY-}stockmodewebapi
    build:
      context: .
      dockerfile: src/StockMode.WebApi/Dockerfile
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=stockmodedb;Username=stockmodeuser;Password=StockMode123
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBITMQ_HOST=mailrabbit
      - OTLP_Endpoint=http://otel-collector:4317
      - Auth__Authority=https://localhost:5001
      - Auth__MetadataAddress=https://host.docker.internal:5001/.well-known/openid-configuration
      - Auth__ValidIssuers__0=https://localhost:5001
      - Auth__ValidIssuers__1=http://localhost:5001
      - Auth__ValidIssuers__2=https://localhost:5001
    depends_on:
         rabbitmq:
            condition: service_started
         postgres:
            condition: service_healthy
    networks:
      - app_network
    
  stockmode.frontend:
    image: ${DOCKER_REGISTRY-}stockmodefrontend
    build:
      context: ./frontend
      dockerfile: /Dockerfile
    ports:
      - "80:80"
    depends_on:
      stockmode.webapi:
        condition: service_started
        
  stockmode.mailworker:
    image: ${DOCKER_REGISTRY-}stockmodemailsender
    build:
      context: .
      dockerfile: src/StockMode.EmailWorker/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
    networks:
      - app_network

  postgres:
    image: postgres:15
    container_name: stockmode-postgres
    environment:
      POSTGRES_USER: stockmodeuser
      POSTGRES_PASSWORD: StockMode123
      POSTGRES_DB: stockmodedb
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stockmodeuser -d stockmodedb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: igorsantanamedeiros@outlook.com
      PGADMIN_DEFAULT_PASSWORD: StockMode123@@
    depends_on:
      - postgres
    networks:
      - app_network
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: mailrabbit
    hostname: mailrabbit
    environment:
      - RABBITMQ_DEFAULT_VHOST=mailrabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app_network

  jaeger:
    image: jaegertracing/all-in-one:1.43
    container_name: jaeger
    ports:
      - "16686:16686"

    networks:
      - app_network

  prometheus:
    image: prom/prometheus:v2.53.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - app_network

  grafana:
    image: grafana/grafana:10.4.4
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    ports:
      - "3000:3000"
    networks:
      - app_network
  
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.103.0
    volumes:
      - ./otel-collector/otel-collector-config.yml:/etc/otel/config.yaml
      - ./log:/log/otel
    command: --config /etc/otel/config.yaml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
    ports:
      - "8889:8889"   
      - "13133:13133" 
      - "55679:55679" 
      - "4317:4317"   
    depends_on:
      jaeger:
        condition: service_started
      prometheus:
        condition: service_started
    networks:
      - app_network

networks:
  app_network:
    driver: bridge