name: StockMode Application
services:
  stockmode.idp:
    image: ${DOCKER_REGISTRY-}stockmodeidp
    build:
      context: .
      dockerfile: StockMode.IDP/Dockerfile
    ports:
      - "5001:5001"
      - "5443:5443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
      # For HTTP-only (Development)
      - IdentityServer__IssuerUri=http://localhost:5001
      - IdentityServer__PublicOrigin=http://localhost:5001
      # Allowed Origins
      - AllowedOrigins__0=http://localhost:5173
      - AllowedOrigins__1=https://localhost:5173
      - AllowedOrigins__2=http://localhost
      - AllowedOrigins__3=https://localhost
      - AllowedOrigins__4=http://localhost:80
      # Client Redirect URIs
      - ClientRedirectUris__0=http://localhost:5173/signin-oidc
      - ClientRedirectUris__1=https://localhost:5173/signin-oidc
      - ClientRedirectUris__2=http://localhost/signin-oidc
      - ClientRedirectUris__3=https://localhost/signin-oidc
      # Client Post Logout URIs
      - ClientPostLogoutRedirectUris__0=http://localhost:5173/
      - ClientPostLogoutRedirectUris__1=https://localhost:5173/
      - ClientPostLogoutRedirectUris__2=http://localhost/
      - ClientPostLogoutRedirectUris__3=https://localhost/
    volumes:
      - ./StockMode.IDP/keys:/app/keys
    networks:
      - app_network
      
  stockmode.webapi:
    image: ${DOCKER_REGISTRY-}stockmodewebapi
    build:
      context: .
      dockerfile: src/StockMode.WebApi/Dockerfile
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=stockmodedb;Username=stockmodeuser;Password=StockMode123
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__RabbitMQ=host=rabbitmq;username=guest;password=guest;virtualHost=/
      - OTLP_Endpoint=http://otel-collector:4317
      - Auth__Authority=http://stockmode.idp:5001
      - Auth__MetadataAddress=http://stockmode.idp:5001/.well-known/openid-configuration
      - Auth__RequireHttpsMetadata=false
      - Auth__ValidIssuers__0=http://localhost:5001
      - Auth__ValidIssuers__1=http://stockmode.idp:5001
    depends_on:
         stockmode.idp:
            condition: service_started
         rabbitmq:
            condition: service_healthy
         postgres:
            condition: service_healthy
    networks:
      - app_network
    
  stockmode.frontend:
    image: ${DOCKER_REGISTRY-}stockmodefrontend
    build:
      context: ./frontend
      dockerfile: /Dockerfile
    ports:
      - "80:80"
    depends_on:
      stockmode.webapi:
        condition: service_started
    networks:
      - app_network
        
  stockmode.mailworker:
    image: ${DOCKER_REGISTRY-}stockmodemailsender
    build:
      context: .
      dockerfile: src/StockMode.EmailWorker/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_VHOST=/
      - ConnectionStrings__RabbitMQ=host=rabbitmq;username=guest;password=guest;virtualHost=/
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: stockmode-postgres
    environment:
      POSTGRES_USER: stockmodeuser
      POSTGRES_PASSWORD: StockMode123
      POSTGRES_DB: stockmodedb
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stockmodeuser -d stockmodedb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: igorsantanamedeiros@outlook.com
      PGADMIN_DEFAULT_PASSWORD: StockMode123@@
    depends_on:
      - postgres
    networks:
      - app_network
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app_network
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:1.43
    container_name: jaeger
    ports:
      - "16686:16686"
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:v2.53.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - app_network

  grafana:
    image: grafana/grafana:10.4.4
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    ports:
      - "3000:3000"
    networks:
      - app_network
 
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.103.0
    volumes:
      - ./otel-collector/otel-collector-config.yml:/etc/otel/config.yaml
      - ./log:/log/otel
    command: --config /etc/otel/config.yaml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
    ports:
      - "8889:8889"   
      - "13133:13133" 
      - "4318:4318"   
      - "4317:4317"   
    depends_on:
      jaeger:
        condition: service_started
      prometheus:
        condition: service_started
    networks:
      - app_network

networks:
  app_network:
    driver: bridge